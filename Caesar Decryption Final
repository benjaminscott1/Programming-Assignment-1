#include <stdio.h>  // Define the printf() and scanf() functions.

int main()  // Main function body.
{
    char Message[1024]; // Declares DecryptedMessage and EncryptedMessage as chars.
    int i, Key;  // Declare i, c, and Key as integers to be used in the decryption.
    
    printf("\nCAESAR CIPHER DECRYPTION WITH KEY\n\nEnter encrypted text: \n"); // Prints a prompt for the user to enter an encrypted text.
    scanf(" %[^\n]", Message);   // Scans the text entered.
    printf("\nEnter a key: \n");  // Prints a prompt for the user to enter a key.
    scanf("%d", &Key);  // Scans the key entered.
    if(Key < 0) // If the key entered is less than zero, multiply it by -25 to make it positive again for the correct rotation.
    {
        Key *= -25; // Multiplies key enetered by -25.
    }
    if(Key > 26)    // If the key is greater than 26, perform a mod on that to make the number more managable and keep it in the range of shifts.
    {
        Key %= 26;  // Take key and perform the modulus operation.
    }
    for(i = 0; Message[i] != '\0'; i = i + 1)   // For loop which sets i to zero, until a null is found, and adds one to it.
    {
        if(Message[i] >= 'A' && Message[i] <= 'Z')  // If loop for a capital letter text.
            {
                Message[i] = (((Message[i] - 39) - Key) % 26 + 'A');   // Decrypted message has 65 taken, setting alphabet to 0-25, then the key is taken from that, then 26 is added to that, then it's modded, and the letter is added back on.
            }
        else if(Message[i] >= 'a' && Message[i] <= 'z')  // Else if do the shift on lower-case letters.
            {
                Message[i] = (((Message[i] - 71) - Key) % 26 + 'A');   // // Decrypted message has 97 taken, setting alphabet to 0-25, then the key is taken from that, then 26 is added to that, then it's modded, and the letter is added back on.
            }
        else
            {
                Message[i] = Message[i];    // If a character is found that doesn't fall in that range just store it and do nothing else with it.
            }
    }
    printf("Decrypted message: \n%s\n\n", Message);   // Prints an empty line to make the output more readable to the user.
    return 0;   // Returns the program.
}
