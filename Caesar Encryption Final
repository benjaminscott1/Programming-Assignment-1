#include <stdio.h>  // Define the printf() and scanf() functions.

int main()  // Main function body.
{
    char Message[1024]; // Declares Message and EncryptedMessage as chars.
    int i, Key;  // Declare i, c, and Key as integers to be used in the decryption.
    
    printf("\nCAESAR CIPHER ENCRYPTION WITH KEY\n\nEnter a text for encryption: \n"); // Prints a prompt for the user to enter a text for encryption.
    scanf(" %[^\n]", Message);   // Scans the text entered.
    printf("\nEnter a key for encryption: \n");  // Prints a prompt for the user to enter a key.
    scanf("%d", &Key);  // Scans the key entered.
    if(Key < 0) // If the key entered is less than zero, multiply it out for accurate rotation.
    {
        Key *= -25; // Muiltiplies Key by -25 to bring it out of the negatives but with correct rotation.
    }
    for(i = 0; Message[i] != '\0' ; i++)   // For loop which sets i to zero, until a null is found, and adds one to it.
    {
        if(Message[i] >= 'A' && Message[i] <= 'Z')  // If loop for determining a capital letter text.
            {
                Message[i] = (((Message[i] - 65) + Key) % 26 + 'A');   // For capitals, the message has 65 taken from it to set the alphabet in the range of 0-25, then the key is added to this, then it is modded by 26 (The amount of letters in the alphabet), and finally the physical letter is added back to it.
            }
        else if(Message[i] >= 'a' && Message[i] <= 'z')  // Else if convert lower-case letters to upper-case letters and perform the rotation.
            {
                Message[i] = (((Message[i] - 97) + Key) % 26 + 'A');   // For lowercase, the message has 97 taken from it to set the alphabet in the range of 0-25, then the key is added to this, then it is modded by 26 (The amount of letters in the alphabet), and finally the physical letter is added back to it.
            }
        else
        {
            Message[i] = Message[i];    // If a character is found that doesn't fall into the alphabet range, that is just stored as is and nothing is done to it.
        }
    }
    printf("Encrypted message: \n%s\n\n", Message);
    return 0;   // Returns the program.
}
